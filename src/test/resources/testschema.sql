DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS film_user_likes CASCADE;
DROP TABLE IF EXISTS friendship_status CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS films
(
    film_id           integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_id            integer,
    film_name         varchar NOT NULL,
    film_description  varchar(200),
    film_release_date date    NOT NULL,
    film_duration     integer NOT NULL,
    CONSTRAINT date_after CHECK (film_release_date > '1895-12-27'),
    CONSTRAINT film_duration_positive CHECK (film_duration > 0)
);

CREATE TABLE IF NOT EXISTS MPA
(
    mpa_id   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name varchar
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  integer,
    genre_id integer,
    UNIQUE (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar
);

CREATE TABLE IF NOT EXISTS users
(
    user_id       integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_email    varchar NOT NULL,
    user_login    varchar NOT NULL,
    user_name     varchar,
    user_birthday date
        CONSTRAINT user_birthday_past_or_present CHECK (user_birthday <= CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS film_user_likes
(
    user_id integer,
    film_id integer,
    UNIQUE (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friendship
(
    user_from            integer NOT NULL,
    user_to              integer NOT NULL,
    friendship_status_id integer
);

CREATE TABLE IF NOT EXISTS friendship_status
(
    friendship_status_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    friendship_status_name VARCHAR NOT NULL
);

ALTER TABLE films
    ADD FOREIGN KEY (mpa_id) REFERENCES MPA (mpa_id) ON DELETE CASCADE;

ALTER TABLE film_genres
    ADD FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE;

ALTER TABLE film_genres
    ADD FOREIGN KEY (genre_id) REFERENCES genre (genre_id) ON DELETE CASCADE;

ALTER TABLE film_user_likes
    ADD FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE;

ALTER TABLE film_user_likes
    ADD FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE;

ALTER TABLE friendship
    ADD FOREIGN KEY (user_from) REFERENCES users (user_id) ON DELETE CASCADE;

ALTER TABLE friendship
    ADD FOREIGN KEY (user_to) REFERENCES users (user_id) ON DELETE CASCADE;

ALTER TABLE friendship
    ADD FOREIGN KEY (friendship_status_id) REFERENCES friendship_status (friendship_status_id) ON DELETE CASCADE;
